map $host $dbk_port {
  default         "";
  "~^(?<p>\d+)-"  ":$p";
}

map $host $dbk_session_id {
  default         "";
  "~-(?<s>\w+)-"  $s;
}

map $http_upgrade $conn_upgrade {
  default     "";
  "websocket" "Upgrade";
}

log_format logger-json escape=json
'{'
'"source": "session-proxy",'
'"time": "$time_iso8601",'
'"resp_body_size": $body_bytes_sent,'
'"host": "$http_host",'
'"address": "$remote_addr",'
'"request_length": $request_length,'
'"method": "$request_method",'
'"uri": "$request_uri",'
'"status": $status,'
'"user_agent": "$http_user_agent",'
'"resp_time": $request_time,'
'"upstream_addr": "$upstream_addr"'
'}';
access_log /var/log/nginx/access.log logger-json;

server {
  listen 3003;

  # DNS server resolved addreses as to <sandbox-id> <ip-address>
  resolver 127.0.0.1;
  resolver_timeout 5s;

  proxy_set_header Host $host;
  proxy_set_header X-Real-IP $remote_addr;

  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection $conn_upgrade;

  proxy_hide_header x-frame-options;

  proxy_http_version 1.1;

  client_body_timeout 86400s;
  client_header_timeout 5s;

  proxy_read_timeout 600s;
  proxy_send_timeout 86400s;

  proxy_cache_bypass 1;
  proxy_no_cache 1;

  client_max_body_size 1024m;

  proxy_buffering off;
  proxy_request_buffering off;

  tcp_nodelay on;
  tcp_nopush on;
  sendfile on;

  send_timeout                600s;

  proxy_connect_timeout       3s;

  keepalive_requests 65536;
  keepalive_timeout 600s;

  gzip off;

  location / {
    if ($dbk_session_id = "") {
      return 502 "Missing sandbox domain";
    }

    proxy_pass $scheme://$dbk_session_id$dbk_port$request_uri;
  }
}

server {
  listen 3004;

  location /health {
    access_log off;
    add_header 'Content-Type' 'application/json';
    return 200 '{"status":"UP"}';
  }

  location /status {
    access_log off;
    stub_status;
    allow all;
  }
}