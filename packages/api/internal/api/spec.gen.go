// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
