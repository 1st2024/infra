// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
