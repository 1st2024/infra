// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/7xXbW/bthP/KgT/Bf4bIFtOmyCY361Zugbo1qBZXgUZwFAnm53EU8lTXCHQdx+O1EMc",
	"y4u7FXllyTze/e7pd6cHqbGs0IIlL5cPslJOlUDgwts7U8ClojU/Z+C1MxUZtHIpf77zWNQEolK0FoSC",
	"1iByU0Airj99EGA1ZpDNZSINi7OUTKRVJYxvDr7UxkEml+RqSKTXaygV26KmYjlPztiVbNtE/oYZ7KJg",
	"fKICVxrvDVovjBWoSRUiR1cqEj/AfDVPxOL05OTHHsuXGlwzggmaHxvPIFd1QXIpF6enpzJhuASOr/55",
	"s5id3j68SY7bVzKZgPnxHtzGGZrAOhwNoRImF4YEfDWe/B50OCichBgD1+G4QyxA2QDk2oPbxcD/CtxY",
	"Y1cDij2Gg4LpsDhEmvC+jRkFT28xMzAUEP9qtASW+LGsCzKVcpRyjmaZoqB+NFQ5rMBRpyHvNMSEspfG",
	"qgB0N/rdP3j3GTSNiMYai//4Cq2P2s/Q5oXRdO4cuidAVVUVRisOXfrZc/weo3zlIJdL+b907J80nvo0",
	"agv2t+PfmxMz8UdfBKpwoLKmKwOhbCaGpAvjRa4KD3PZJvIX40ATuoZb8oUQv1WZ+BSz2oH2FWiTG8hi",
	"6xsvlMh6ZHPx0RZNcMwLray4A5HhxhaoAh2wF93rVa01eP8PLqAmoJknB6rcdmUb4xDKXk9yQLXseHpu",
	"ybhO0QhZ+Agzr4uiYTpbg8o6djxTeg2zM7TksNgGCF9VWXHhSoszzXKJsDjzhA6mwLSJPOf8G7vilrmu",
	"nkRoj8Mb5UVdZYpeEuiFZTZUxRW4e3AvVIe9UeGDVQFRMJG/w+ZbI6YdvFzEEvkBYyimUfG0xDywcV11",
	"NdfR8mhzKOducu6mpe3FA/whKdtcqieHaBAWOo7BTrOxBCsIAS7Be7Xae68/nvJ8JN8bOcoFS7cBsrE5",
	"TuwWlxc8v0WprFrxqAp08v++vQNF6piago/B3mds31BIS/d6D85HfYv50XzBrmAFVlVGLuWb+WK+iKN9",
	"HUKTBhuNJyjjY/rAZy2frSBUNUcyJPIik0v5K9C74Up4uoy5ebxB3UxX+yiSDhtWe/tkNL1eLPZ1yyCX",
	"PiXTNpHHB93bHSWhhOqyZLpcDiwtVKzGNpFVPRGGy/o7hyF5VjZsJgfIhcXuALlxZ4s56FeYZn8YH205",
	"Abps/03y9jN+m8jXi6PnNUyS33+pAb760/NXt9em7cqJYIa6aROZrkEV8SNiXyu9jxI7UTyeJk1ucd48",
	"ouKGcZ8c4vLU6NpGf7YG/Vdg46i75+ZAKtEZ9JT6xurAr+inmgI9vUdPVyx1qE9kSgjUVgIp3orZQbYD",
	"mdgY/shiUGzv+3l7bn3t4gfJN5gPOoLO2Nu1K+RSpvdHsr1t/w4AAP//ZEqvc1EOAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
