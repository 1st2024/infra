// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"5kfJ/w8AAP//XEB+BBUnAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
