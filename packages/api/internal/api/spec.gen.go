// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.3 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
