// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
