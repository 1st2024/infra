// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
