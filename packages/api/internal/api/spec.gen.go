// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xc3W/juBH/Vwi2j07ky6Z98Fuyl16Dvd4FmwAtsAgKWhpHvEikjqScGIH/94KkJFJf",
	"tmQ7X4WfNjapIWfmN99av+CQpxlnwJTEsxecEUFSUCDMp3lOk+j6Z/0nZXiGM6JiPMGMpIBn1eoEC/gz",
	"pwIiPFMihwmWYQwp0Y+pVaa3SiUoe8Dr9QQDW/ZStGvj6FEmFWEh9BL1NoyjLAmL5vy5l7BbH0dXQZol",
	"RPXf2NswhvJab5YZZxKM9s6nU/1PyJkCpvSfJMsSGhJFOQv+kJzp7xy9vwpY4Bn+S+AgEdhVGVwJwYU9",
	"IwIZCpppIniGL0mE9BVBKrye4PPpT69/5kWuYmCqoIrA7tOHn7/+4b9xhRY8Z5E+8W9vIeJbEEsQJZvr",
	"EgJGx1dsSQVnaXF6JngGQlELAJJQUmChIUC7gPgCqRgQeEQmmCpIZQe+JuUXRAiy0p8991Cnfx1p9Swo",
	"iPKIhEiFZB6GIOUiT5B5FC24QA90CaxxhdbJldPYds4WOlk+T2jYJvTvGFQMokkCUYnsI4gLxFmyQsSw",
	"QOcJoPnK7FdAUnfWnPMECMPWGkvT/VG5Nuc0i7vcrye+Fi/1eluVI0Rttr6mEBP+UGBqQfJE4dmP+5ZX",
	"MOo1G8cASiqi8g683prvu68HLE+1gA3bmq6WO4lWeslYzP2kwwdvVs2CMipj0FI0PBgdGWItxYQ8gvaF",
	"zWZk1iZ4wUVKlIlE6suZkyhlCh7AeK4UpCQPfYTwNg6Kg0oq+rrXRdTruHFCgalhSLB7DwUmtBA8RU8x",
	"DWNtWXq1DM4oFEAUdOK2HuG3nVfuxkPVXssPKuH4MvwXKBIRZTw4iSKqzybJTU2q9WuVTwy61G/w1K+t",
	"wXIuWdtmvanHzKZw1GK+W373loFbmwu17z/0uIKAO62ZJw3mv3xsKwA8+pqL7zljlD0cDeegoDFOXSiI",
	"LlT7Enc0BfQUA6uz9EQkKp7y3WdEFJwomu5r2v6VPMUXCLS67kiketKoUnz9sJscCDl7mFKtlNl2g2Jz",
	"1xUG67KgsYMqx9p9ubvDRspL9JpIv0OY1Kq7Xuj0ur2PgZhDqf0Da8TTwv5hulcE6wm+K7W1c5nl6ftd",
	"aqxNeBtSGFV63aMq2hVL45DSWWSVCnzFCuu9KyNPWjuURW+tm3aVpRmFMBdUrW51MLOauTDguuOPwC5y",
	"FRtlAREg/lGGEwu//yq9BRf9EQM7s83dL1Yq03xeZPQbrEpipgMXA4nM1qIH95+Ti5vrk2+wck8T85Tt",
	"0FC24EZxVCV67ersEl3cXOMJXoKQVmLT059Op/o4ngEjGcUz/OV0ejrVsCQqNrwFwJbmjwfoiKm/UqkQ",
	"SRI/F9S40bg1LabrCM/wL6CuNJVG++9sZG+qAiNJkt8XePZjS7vKKzPW9y3IdrSxKs+UrJAAlQsGUZs7",
	"10TsOr3iMNCbXAdu8169yQeXYa4Fqx/3a20URNuwySFt4Z9x2aGaryaCIYIYPDVKrrp2brh06jF90kse",
	"rRqaSfNE0YwIFegU6aSMYsBCboy39E9f9SPPynv6rsSmUy0PFagTqYR2wa5fuFuSsqWabN6qTulnHj6C",
	"KAJRWOzy0sA5ZUSsuuhG5skFTaCPql5DpQj7UtWvadTpM4VCIU9TwiKkOIJnCHMd11g9zpGFKkJfj8dv",
	"+LmaMGo8OGfL539AqMpuvd/aX7fs9+xwvWXfWNumeVeyiGIvX/9glrieWG8ZvJjybm0Vm4Dqgoj5HhG2",
	"0TTtLm2cV0XB6I+/evyf2xLYMlNftaG4847yqFHR68LI3j7ycrZk9Vn833ewgNki4tL77S/go+s8us6j",
	"6zyM6wzMjWXwUiTj694M9BdQNbdlWTXZb08aaizdVDny0pVhu5j9ZOvGspbQWxvVCovguSrrtVYoeyhu",
	"n/AHpGKikIx5nkRoDi4dfaIq7pqJapp/5mAsrqgQdM3y+2IhQWHfT1S137Q96OkIFdPXAKotcQfn4E1+",
	"R6K3GLtv23v+IZAelDV6d1i7iCJEHE42x7Mayn+1Jf1rI31jLNwMnkYEy+gthKLL6C9urpG0axuaHEOb",
	"Fw1P784ty/6dHPxPHcHJBzeJIrAqfDU0rzvRFwNJbF+h06H+0yyjMIbwscuF2vWeWr6Zghkc2B57xfs4",
	"fo2sg3JOMqATIeywBLlHOpi49hbfsifRHOHt2Zdo82pkOx0i2+kb5gBeN6vuFN3FtzcymJu/mb59Owi2",
	"PWFdz7t5pU369Cfjw73CQY6un9vO+WrDymKc0VHIfU6s1HxC8OLGqOtAwEKAjGFDDP1ut9RnuvCsgEXG",
	"mpREiqagy4eELmEzsq6rs79XJ4+Nst4Y+HDxM8rtlTuKrGLFjF7s+KsmCpd2PkKmvSpdmgJKQshZpNlL",
	"yTNN8xTPvvx9Op3glDL7sSul7Iie6yENiYbbs7KN6m8CvGbo3BGW0p/SDwtV7pGOUHXrLb5DqHLHHyhW",
	"OWY/mf9xFx/QdC/nyFWk8mZRbWdS1/GrhKnyRYA3jlK1Y9tByn8L4/8hRvkYqTmD4KV6OWBjX/gbTRIH",
	"n56GcAWXW++Fg3ERx72qMLw77CvrkSbJno3hN6rK99PV2HSilNHIbKKt0d2TiaZq3yWXKOXw4VOJ0tI+",
	"QCbRBGQZMgZkEm5rRwZx5y2+ZQZRvZC0Z+bgmPsoXWt3o4Hz943Rv66fzzdG2vTa1nGG9ClmSM5UP9sA",
	"yTfFmtMMXtxbXYNG8f1GandUZnrnvy02LjZ7L5oNz7sqvH34kfwQv+jN5Yd5xUOK++hcj8716FwP7FzH",
	"DesrBW+e1HeY/34ze98XvOvg3n/L/hNM7etvpY8a2VecfsZ5/Y7YP8D4fhv0dxrk7wj/4zT/I07za9g0",
	"uBbLEge5SIr/SCBnQUAyegpn89MIlthD90vzlzykQUX9d0PqX/oz5hfv91DMYOB/AQAA//+FmtxRpkUA",
	"AA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
