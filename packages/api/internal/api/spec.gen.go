// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"//99lgwqKx4AAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
