// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"HJ67/xPHuHmr/j8/xraJvwIAAP//U8GzfYokAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
