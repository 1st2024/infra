// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"1c3H2fo/AQAA//8NU8IZSS8AAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
