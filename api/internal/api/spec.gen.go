// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"/z0BtEbvHAAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
