// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.3 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xaW2/juBX+KwTbR63tZLKLrd+SzHYbTLIbJNm2QGAUtHQccUORWpJyYgT+7wVJXSiJ",
	"8iXxZDNFnyYjHpLn8p0r/YJjkeWCA9cKT19wTiTJQIO0/5sXlCUXn82flOMpzolOcYQ5yQBP69UIS/ij",
	"oBISPNWygAirOIWMmG16lRtSpSXlD3i9jrAiPJmL58FTm/X9ztWQ5YxoGDzYI9jn5LUhVrngCqxOTiYT",
	"808suAauzZ8kzxmNiaaCj39XgptvzXl/lbDAU/yXcaPosVtV45+kFNLdkYCKJc3NIXiKz0iCDIugNF5H",
	"+GRy9PXvPC10ClyXpyJwdObyk69/+S9Co4UoeGJu/P49VHwLcgmyEnNdQcDa+Pz6t3NRuKvbu86vf0Ox",
	"kKDQQkikU0AlXnGEF0JmROMpplx/OsYRzsgzzYoMT3+McEa5+/soqiBGuYYHsDp2XBr/kyIHqanDWiwS",
	"6PNgiZFdC1zaPzwDpcjD0EHNFs+ZGve4x+VF1SmzdYSvIBNydXXWP9KtdJWDKEdXZ5tVdPS3Y19Lxz+G",
	"RPkFnm5LffeUlYEmCdFbEVEecFWR92JHW6KLxDjFgoJEYmGFqpSDqm19FUZY0wxEUSJoQQqm8fTo+y4I",
	"72gGSAvE6BJCSlMQC56oUVB1la4mfU11TOjJZ8x3U3BO+cOgJgmjzg86AcJ8rpSwSfaYUeB6N2U62uAp",
	"eVE74SZ71s5qod4Ac9OeGsB2z6tx08pl2yRtAkVPVKWJ1JCcBgKORchTCrwFjSeiULnJh0ZCNHxnkBdE",
	"5F4gr6jRQooMPaU0ThFVLSZiCcQxsDmAtBKvn95rnPga8Azv2dPA9oPjFfgy+SdIRV16ah9ULlSnGFok",
	"nRsaP9+GjwPh7ENDwNefZ+5L8dBn9lI8IOBartAT1SkykFeaZDkiPEGMcmPmNkbsx+A5ZgVVtcZAJLeH",
	"h53T3VuqjFV87eiVXTXVV0WO4bYeVB/6rPzaE0v14UA1ZGrHKGe0vq7ZJVKSVY9be7fH4ZUXSEmSUMMM",
	"YdctfrvVgtuxFbrrCN9VDhx2fxgKABAKAbUq+tZuSRz5LdA2f2FEaaSKOAalFgVDdqvN6g90aQL4phD0",
	"TskuL+aMxn1p/pWCTkG2/Z4q5OiRkEhwtkLECkfnDNB8VRKTrBFoLgQDwl8fa/aLJE0HGsoZtbQzDz5n",
	"ZksfQ3uY2ZKGbNj4Ylnv3c96fZ2FhCXcB4RKE10EAH5rvwd0CNwUhvdOLHOoUSJJTFhyDc/sYNnhtRYr",
	"ZYqaMNIy0U3Z/R4+2b/C0xIRP4JcUBZIIZ/rtbqA33T9a5zWFkfnWRIEgNQoFllmEp8WCJ4hLozr8rYr",
	"k4UuvXsAvh2jeRLPbHMMcSGpXt0a9pwhTm0suBOPwE8LnVovAiJB/r1KfC5a/EcbElw22DZKWLKGh1Tr",
	"3Mh5mtMvsKoOsyOcFEhiScshzr+/O72++O4LrJrdxO5yLT7lC2E9impjK/zT8Rk6vb7AEV5WlRmejI5G",
	"E3OdyIGTnOIp/jSajCYmXhCdWtnGKRDm2HiAQFX+D7uM4hTiR2xPknY4cZHgKf4ZtFvHndHRsZtrtI8q",
	"ge5K+jp5eFOfEErqY8eGaG1lH5fZ090VZPuSKo0IY3Xp2WwJCHHrLYbk2Hk+Uwc6wtivCzy93wz9Tnu6",
	"nvULkf40p9YcWyEJupAckgFRrWonu6h2sp8Z6snVZlpD5PuUVYiP/fvZ2sRnYtLJPW4YN4rIhQqNpWwd",
	"jkhdmNuSvROL2ga+FqpjYYvDM5GsDjZ888Y163aE0bKAdQ9Wh5tytq7tFO2dPrrsYTznY6tvGSOtUDB+",
	"qbuttYMNAx3IYl8oYw18emD5bLfVcLn1Ojj/xWDAsRuScdP7GfY75j8JdFgdYz1SxoK22l3/5Tx7G+3J",
	"n2qrcVVMBuP4z6BrrZTF5HD0ro116ShfbbAoWH2Y2KoDfbBCOiUaqVQULEFzaKIy5SijjNFyuGkqYXPa",
	"HwXYvrl6BzKHY/9lxp+A/nCydQLaazbdqBnxIpu7MnYTlwNcMZrRNlfNdHcymew7pp29MbPu1smr3TOm",
	"P9yxyPqfdC4JCwkqdToPZ9QbR9JSCDxr4Ikd2WllQV/N7jdn19oDb+p73xo3X5er251UUjiGAz1NuWI7",
	"Gjf48/XQeMsj5KagpEvwXiv8Z51PPxin2PJUUX4S898h1mU1uz01dADsNNtC8NcD76EB6b0WheF4C9qV",
	"c46w+1Y0Qq1EaZI5POdUAnqurOKVhAa43lsWKD1C54QxG8pTqlAGOhUJygqmac7cDoXEEuSTpBrcDPju",
	"7jJCQGI3fkWFctsBxYWUwLU/lS2nxlW+yAU16wJlQFQhoSVaBcvRjk51V+ruI7hU69WvOyk2wjVe0tjD",
	"11fZqA/6nLPqW58DSy5nB3E9VUKz4rQ6/RvPHFXjtEM33ZAG6rA7b/E9u+h6Xv7G/rkR7v36nO5kqW2p",
	"hqMdGmIOT5t74LZ9Dt8DB6eaO3XDxwfnYagddi8Vpr8icQy5huRDGrvlluOXZrC8sbV1vSsiwzBwFDUQ",
	"7vyB9X45xZt1797f1kNaYwAnxds63D/V827AoYnwHf3ukOr+v/t+k+47thKo8Uv5PLTeUAjbFw//IWMn",
	"aFnzqbP69en1OIu2UldvXIEIcByOAM6Aqfejnm/cfuPmxXJwgFWHPSe9fbrZVD8NGPO2ekd8F5P2pkoX",
	"PIHn+vcLVYMzr955B4dg7ncrnV8lhAZO4kH9ulgoGJg6faiRU/uRfa+hU62Gj9k27OEldq9cVjgsJCuf",
	"ONV0PCY5HcHxfJTAEnsnvHR/pK4s1No/iTcfZ+v/BgAA//9x2cihsi8AAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
