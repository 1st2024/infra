// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"///5sAdsxR0AAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
