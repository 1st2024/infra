// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.3 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"sL8CNAAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
