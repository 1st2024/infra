// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"4I15SvlfAAAA///lvr1Gh0cAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
