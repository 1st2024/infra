// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
