// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.3 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
