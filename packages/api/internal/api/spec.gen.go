// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"//9OVd6hfi0AAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
