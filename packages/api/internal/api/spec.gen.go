// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.2 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"LE97w9Dn981rbk4p5sW/AQAA///QLwM3oh4AAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
