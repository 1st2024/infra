openapi: 3.0.0
info:
  version: 1.0.0
  title: Devbook
  description: Devbook API

tags:
  - name: sessions
    description: Managing VM sessions
  - name: env
    description: Environment for VM

components:
  #securitySchemes:
  #  ApiKeyAuth: # Arbitrary name for the security scheme
  #    type: apiKey
  #    in: query # Can be "header", "query" or "cookie"
  #    name: API_KEY # Name of the header, query parameter or cookie
  schemas:
    AnyValue: {}
    Environment:
      required:
        - code_snippet_id
        - runtime
        - deps
      properties:
        code_snippet_id:
          type: string
          description: Identifier of a code snippet which which is the environment associated
        runtime:
          type: string
          enum: [nodejs]
        deps: # ["dep1", "dep2"]
          type: array
          items:
            type: string
    SessionForm:
      required:
        - code_snippet_id
      properties:
        code_snippet_id:
          type: string
          description: Identifier of a code snippet which which is the environment associated
    Session:
      required:
        - session_id
        - client_id
      properties:
        session_id:
          type: string
          description: Identifier of the session
        client_id:
          type: string
          description: Identifier of the client
    Status:
      required:
        - status
      properties:
        status:
          type: string
          description: Status of the operation

    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          description: Error code
        message:
          type: string
          description: Error

#security:
#- ApiKeyAuth: [] # Use the same name as under securitySchemes

paths:
  /:
    get:
      description: Health check
      responses:
        200:
          description: Request was successful
  /sessions:
    get:
      tags:
        - sessions
      description: List all sessions
      responses:
        200:
          description: Successfully returned all sessions
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: "#/components/schemas/AnyValue"
        500:
          description: Error listing sessions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      tags:
        - sessions
      description: Create a session on the server
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SessionForm"
      responses:
        201:
          description: Successfully created a session
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Session"
        400:
          description: Bad request body format
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Error creating session
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /sessions/{session_id}:
    delete:
      tags:
        - sessions
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
      description: Delete a session on the server
      responses:
        204:
          description: Successfully deleted the session
        500:
          description: Error deleting the session
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /sessions/{session_id}/refresh:
    put:
      tags:
        - sessions
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
      description: Refresh the session extending its time to live
      responses:
        204:
          description: Successfully refreshed the session
        500:
          description: Error refreshing the session
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /env:
    post:
      tags:
        - env
      responses:
        200:
          description: Successfully created an environment
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Environment"
