// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
