// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
