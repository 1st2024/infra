// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.3 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"P7DfZzwAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
