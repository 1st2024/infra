// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"OzT1/0LQD6H/HwAA//8Z8H5BwSgAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
