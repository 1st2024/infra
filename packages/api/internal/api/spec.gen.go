// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"m/8EAAD//zORWA2kTQAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
