// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
