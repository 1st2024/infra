// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: envd/process/v1/process.proto

package processv1

import (
	v1 "github.com/e2b-dev/infra/packages/envd/internal/services/spec/envd/permissions/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Signal int32

const (
	Signal_SIGNAL_UNSPECIFIED Signal = 0
	Signal_SIGNAL_SIGTERM     Signal = 1
	Signal_SIGNAL_SIGKILL     Signal = 2
)

// Enum value maps for Signal.
var (
	Signal_name = map[int32]string{
		0: "SIGNAL_UNSPECIFIED",
		1: "SIGNAL_SIGTERM",
		2: "SIGNAL_SIGKILL",
	}
	Signal_value = map[string]int32{
		"SIGNAL_UNSPECIFIED": 0,
		"SIGNAL_SIGTERM":     1,
		"SIGNAL_SIGKILL":     2,
	}
)

func (x Signal) Enum() *Signal {
	p := new(Signal)
	*p = x
	return p
}

func (x Signal) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Signal) Descriptor() protoreflect.EnumDescriptor {
	return file_envd_process_v1_process_proto_enumTypes[0].Descriptor()
}

func (Signal) Type() protoreflect.EnumType {
	return &file_envd_process_v1_process_proto_enumTypes[0]
}

func (x Signal) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Signal.Descriptor instead.
func (Signal) EnumDescriptor() ([]byte, []int) {
	return file_envd_process_v1_process_proto_rawDescGZIP(), []int{0}
}

type PTY struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size *PTY_Size `protobuf:"bytes,1,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *PTY) Reset() {
	*x = PTY{}
	if protoimpl.UnsafeEnabled {
		mi := &file_envd_process_v1_process_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PTY) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PTY) ProtoMessage() {}

func (x *PTY) ProtoReflect() protoreflect.Message {
	mi := &file_envd_process_v1_process_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PTY.ProtoReflect.Descriptor instead.
func (*PTY) Descriptor() ([]byte, []int) {
	return file_envd_process_v1_process_proto_rawDescGZIP(), []int{0}
}

func (x *PTY) GetSize() *PTY_Size {
	if x != nil {
		return x.Size
	}
	return nil
}

type ProcessConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd  string            `protobuf:"bytes,1,opt,name=cmd,proto3" json:"cmd,omitempty"`
	Args []string          `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	Env  map[string]string `protobuf:"bytes,3,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Cwd  string            `protobuf:"bytes,4,opt,name=cwd,proto3" json:"cwd,omitempty"`
}

func (x *ProcessConfig) Reset() {
	*x = ProcessConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_envd_process_v1_process_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessConfig) ProtoMessage() {}

func (x *ProcessConfig) ProtoReflect() protoreflect.Message {
	mi := &file_envd_process_v1_process_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessConfig.ProtoReflect.Descriptor instead.
func (*ProcessConfig) Descriptor() ([]byte, []int) {
	return file_envd_process_v1_process_proto_rawDescGZIP(), []int{1}
}

func (x *ProcessConfig) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

func (x *ProcessConfig) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *ProcessConfig) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *ProcessConfig) GetCwd() string {
	if x != nil {
		return x.Cwd
	}
	return ""
}

type ListProcessesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListProcessesRequest) Reset() {
	*x = ListProcessesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_envd_process_v1_process_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProcessesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProcessesRequest) ProtoMessage() {}

func (x *ListProcessesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_envd_process_v1_process_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProcessesRequest.ProtoReflect.Descriptor instead.
func (*ListProcessesRequest) Descriptor() ([]byte, []int) {
	return file_envd_process_v1_process_proto_rawDescGZIP(), []int{2}
}

type ListProcessesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Processes []*ProcessConfig `protobuf:"bytes,1,rep,name=processes,proto3" json:"processes,omitempty"`
}

func (x *ListProcessesResponse) Reset() {
	*x = ListProcessesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_envd_process_v1_process_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProcessesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProcessesResponse) ProtoMessage() {}

func (x *ListProcessesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_envd_process_v1_process_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProcessesResponse.ProtoReflect.Descriptor instead.
func (*ListProcessesResponse) Descriptor() ([]byte, []int) {
	return file_envd_process_v1_process_proto_rawDescGZIP(), []int{3}
}

func (x *ListProcessesResponse) GetProcesses() []*ProcessConfig {
	if x != nil {
		return x.Processes
	}
	return nil
}

type StartProcessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Process *ProcessConfig  `protobuf:"bytes,1,opt,name=process,proto3" json:"process,omitempty"`
	Pty     *PTY            `protobuf:"bytes,2,opt,name=pty,proto3,oneof" json:"pty,omitempty"`
	Owner   *v1.Credentials `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *StartProcessRequest) Reset() {
	*x = StartProcessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_envd_process_v1_process_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartProcessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartProcessRequest) ProtoMessage() {}

func (x *StartProcessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_envd_process_v1_process_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartProcessRequest.ProtoReflect.Descriptor instead.
func (*StartProcessRequest) Descriptor() ([]byte, []int) {
	return file_envd_process_v1_process_proto_rawDescGZIP(), []int{4}
}

func (x *StartProcessRequest) GetProcess() *ProcessConfig {
	if x != nil {
		return x.Process
	}
	return nil
}

func (x *StartProcessRequest) GetPty() *PTY {
	if x != nil {
		return x.Pty
	}
	return nil
}

func (x *StartProcessRequest) GetOwner() *v1.Credentials {
	if x != nil {
		return x.Owner
	}
	return nil
}

type UpdateProcessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Process *ProcessSelector `protobuf:"bytes,1,opt,name=process,proto3" json:"process,omitempty"`
	Pty     *PTY             `protobuf:"bytes,2,opt,name=pty,proto3,oneof" json:"pty,omitempty"`
}

func (x *UpdateProcessRequest) Reset() {
	*x = UpdateProcessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_envd_process_v1_process_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProcessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProcessRequest) ProtoMessage() {}

func (x *UpdateProcessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_envd_process_v1_process_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProcessRequest.ProtoReflect.Descriptor instead.
func (*UpdateProcessRequest) Descriptor() ([]byte, []int) {
	return file_envd_process_v1_process_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateProcessRequest) GetProcess() *ProcessSelector {
	if x != nil {
		return x.Process
	}
	return nil
}

func (x *UpdateProcessRequest) GetPty() *PTY {
	if x != nil {
		return x.Pty
	}
	return nil
}

type UpdateProcessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateProcessResponse) Reset() {
	*x = UpdateProcessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_envd_process_v1_process_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProcessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProcessResponse) ProtoMessage() {}

func (x *UpdateProcessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_envd_process_v1_process_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProcessResponse.ProtoReflect.Descriptor instead.
func (*UpdateProcessResponse) Descriptor() ([]byte, []int) {
	return file_envd_process_v1_process_proto_rawDescGZIP(), []int{6}
}

type ProcessEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to EventType:
	//
	//	*ProcessEvent_Start
	//	*ProcessEvent_Data
	//	*ProcessEvent_End
	EventType isProcessEvent_EventType `protobuf_oneof:"event_type"`
}

func (x *ProcessEvent) Reset() {
	*x = ProcessEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_envd_process_v1_process_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessEvent) ProtoMessage() {}

func (x *ProcessEvent) ProtoReflect() protoreflect.Message {
	mi := &file_envd_process_v1_process_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessEvent.ProtoReflect.Descriptor instead.
func (*ProcessEvent) Descriptor() ([]byte, []int) {
	return file_envd_process_v1_process_proto_rawDescGZIP(), []int{7}
}

func (m *ProcessEvent) GetEventType() isProcessEvent_EventType {
	if m != nil {
		return m.EventType
	}
	return nil
}

func (x *ProcessEvent) GetStart() *ProcessEvent_StartEvent {
	if x, ok := x.GetEventType().(*ProcessEvent_Start); ok {
		return x.Start
	}
	return nil
}

func (x *ProcessEvent) GetData() *ProcessEvent_DataEvent {
	if x, ok := x.GetEventType().(*ProcessEvent_Data); ok {
		return x.Data
	}
	return nil
}

func (x *ProcessEvent) GetEnd() *ProcessEvent_EndEvent {
	if x, ok := x.GetEventType().(*ProcessEvent_End); ok {
		return x.End
	}
	return nil
}

type isProcessEvent_EventType interface {
	isProcessEvent_EventType()
}

type ProcessEvent_Start struct {
	Start *ProcessEvent_StartEvent `protobuf:"bytes,1,opt,name=start,proto3,oneof"`
}

type ProcessEvent_Data struct {
	Data *ProcessEvent_DataEvent `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

type ProcessEvent_End struct {
	End *ProcessEvent_EndEvent `protobuf:"bytes,3,opt,name=end,proto3,oneof"`
}

func (*ProcessEvent_Start) isProcessEvent_EventType() {}

func (*ProcessEvent_Data) isProcessEvent_EventType() {}

func (*ProcessEvent_End) isProcessEvent_EventType() {}

type StartProcessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *ProcessEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *StartProcessResponse) Reset() {
	*x = StartProcessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_envd_process_v1_process_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartProcessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartProcessResponse) ProtoMessage() {}

func (x *StartProcessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_envd_process_v1_process_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartProcessResponse.ProtoReflect.Descriptor instead.
func (*StartProcessResponse) Descriptor() ([]byte, []int) {
	return file_envd_process_v1_process_proto_rawDescGZIP(), []int{8}
}

func (x *StartProcessResponse) GetEvent() *ProcessEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type ReconnectProcessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *ProcessEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *ReconnectProcessResponse) Reset() {
	*x = ReconnectProcessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_envd_process_v1_process_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReconnectProcessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReconnectProcessResponse) ProtoMessage() {}

func (x *ReconnectProcessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_envd_process_v1_process_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReconnectProcessResponse.ProtoReflect.Descriptor instead.
func (*ReconnectProcessResponse) Descriptor() ([]byte, []int) {
	return file_envd_process_v1_process_proto_rawDescGZIP(), []int{9}
}

func (x *ReconnectProcessResponse) GetEvent() *ProcessEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type SendProcessInputRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Process *ProcessSelector `protobuf:"bytes,1,opt,name=process,proto3" json:"process,omitempty"`
	Input   *ProcessInput    `protobuf:"bytes,2,opt,name=input,proto3" json:"input,omitempty"`
}

func (x *SendProcessInputRequest) Reset() {
	*x = SendProcessInputRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_envd_process_v1_process_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendProcessInputRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendProcessInputRequest) ProtoMessage() {}

func (x *SendProcessInputRequest) ProtoReflect() protoreflect.Message {
	mi := &file_envd_process_v1_process_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendProcessInputRequest.ProtoReflect.Descriptor instead.
func (*SendProcessInputRequest) Descriptor() ([]byte, []int) {
	return file_envd_process_v1_process_proto_rawDescGZIP(), []int{10}
}

func (x *SendProcessInputRequest) GetProcess() *ProcessSelector {
	if x != nil {
		return x.Process
	}
	return nil
}

func (x *SendProcessInputRequest) GetInput() *ProcessInput {
	if x != nil {
		return x.Input
	}
	return nil
}

type SendProcessInputResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendProcessInputResponse) Reset() {
	*x = SendProcessInputResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_envd_process_v1_process_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendProcessInputResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendProcessInputResponse) ProtoMessage() {}

func (x *SendProcessInputResponse) ProtoReflect() protoreflect.Message {
	mi := &file_envd_process_v1_process_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendProcessInputResponse.ProtoReflect.Descriptor instead.
func (*SendProcessInputResponse) Descriptor() ([]byte, []int) {
	return file_envd_process_v1_process_proto_rawDescGZIP(), []int{11}
}

type ProcessInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Input:
	//
	//	*ProcessInput_Stdin
	Input isProcessInput_Input `protobuf_oneof:"input"`
}

func (x *ProcessInput) Reset() {
	*x = ProcessInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_envd_process_v1_process_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessInput) ProtoMessage() {}

func (x *ProcessInput) ProtoReflect() protoreflect.Message {
	mi := &file_envd_process_v1_process_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessInput.ProtoReflect.Descriptor instead.
func (*ProcessInput) Descriptor() ([]byte, []int) {
	return file_envd_process_v1_process_proto_rawDescGZIP(), []int{12}
}

func (m *ProcessInput) GetInput() isProcessInput_Input {
	if m != nil {
		return m.Input
	}
	return nil
}

func (x *ProcessInput) GetStdin() []byte {
	if x, ok := x.GetInput().(*ProcessInput_Stdin); ok {
		return x.Stdin
	}
	return nil
}

type isProcessInput_Input interface {
	isProcessInput_Input()
}

type ProcessInput_Stdin struct {
	Stdin []byte `protobuf:"bytes,1,opt,name=stdin,proto3,oneof"`
}

func (*ProcessInput_Stdin) isProcessInput_Input() {}

type SendProcessSignalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Process *ProcessSelector `protobuf:"bytes,1,opt,name=process,proto3" json:"process,omitempty"`
	Signal  Signal           `protobuf:"varint,2,opt,name=signal,proto3,enum=envd.process.v1.Signal" json:"signal,omitempty"`
}

func (x *SendProcessSignalRequest) Reset() {
	*x = SendProcessSignalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_envd_process_v1_process_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendProcessSignalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendProcessSignalRequest) ProtoMessage() {}

func (x *SendProcessSignalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_envd_process_v1_process_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendProcessSignalRequest.ProtoReflect.Descriptor instead.
func (*SendProcessSignalRequest) Descriptor() ([]byte, []int) {
	return file_envd_process_v1_process_proto_rawDescGZIP(), []int{13}
}

func (x *SendProcessSignalRequest) GetProcess() *ProcessSelector {
	if x != nil {
		return x.Process
	}
	return nil
}

func (x *SendProcessSignalRequest) GetSignal() Signal {
	if x != nil {
		return x.Signal
	}
	return Signal_SIGNAL_UNSPECIFIED
}

type SendProcessSignalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendProcessSignalResponse) Reset() {
	*x = SendProcessSignalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_envd_process_v1_process_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendProcessSignalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendProcessSignalResponse) ProtoMessage() {}

func (x *SendProcessSignalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_envd_process_v1_process_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendProcessSignalResponse.ProtoReflect.Descriptor instead.
func (*SendProcessSignalResponse) Descriptor() ([]byte, []int) {
	return file_envd_process_v1_process_proto_rawDescGZIP(), []int{14}
}

type ReconnectProcessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Process *ProcessSelector `protobuf:"bytes,1,opt,name=process,proto3" json:"process,omitempty"`
}

func (x *ReconnectProcessRequest) Reset() {
	*x = ReconnectProcessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_envd_process_v1_process_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReconnectProcessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReconnectProcessRequest) ProtoMessage() {}

func (x *ReconnectProcessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_envd_process_v1_process_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReconnectProcessRequest.ProtoReflect.Descriptor instead.
func (*ReconnectProcessRequest) Descriptor() ([]byte, []int) {
	return file_envd_process_v1_process_proto_rawDescGZIP(), []int{15}
}

func (x *ReconnectProcessRequest) GetProcess() *ProcessSelector {
	if x != nil {
		return x.Process
	}
	return nil
}

type ProcessSelector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Selector:
	//
	//	*ProcessSelector_Pid
	Selector isProcessSelector_Selector `protobuf_oneof:"selector"`
}

func (x *ProcessSelector) Reset() {
	*x = ProcessSelector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_envd_process_v1_process_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessSelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessSelector) ProtoMessage() {}

func (x *ProcessSelector) ProtoReflect() protoreflect.Message {
	mi := &file_envd_process_v1_process_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessSelector.ProtoReflect.Descriptor instead.
func (*ProcessSelector) Descriptor() ([]byte, []int) {
	return file_envd_process_v1_process_proto_rawDescGZIP(), []int{16}
}

func (m *ProcessSelector) GetSelector() isProcessSelector_Selector {
	if m != nil {
		return m.Selector
	}
	return nil
}

func (x *ProcessSelector) GetPid() uint32 {
	if x, ok := x.GetSelector().(*ProcessSelector_Pid); ok {
		return x.Pid
	}
	return 0
}

type isProcessSelector_Selector interface {
	isProcessSelector_Selector()
}

type ProcessSelector_Pid struct {
	Pid uint32 `protobuf:"varint,1,opt,name=pid,proto3,oneof"`
}

func (*ProcessSelector_Pid) isProcessSelector_Selector() {}

type PTY_Size struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cols uint32 `protobuf:"varint,1,opt,name=cols,proto3" json:"cols,omitempty"`
	Rows uint32 `protobuf:"varint,2,opt,name=rows,proto3" json:"rows,omitempty"`
}

func (x *PTY_Size) Reset() {
	*x = PTY_Size{}
	if protoimpl.UnsafeEnabled {
		mi := &file_envd_process_v1_process_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PTY_Size) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PTY_Size) ProtoMessage() {}

func (x *PTY_Size) ProtoReflect() protoreflect.Message {
	mi := &file_envd_process_v1_process_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PTY_Size.ProtoReflect.Descriptor instead.
func (*PTY_Size) Descriptor() ([]byte, []int) {
	return file_envd_process_v1_process_proto_rawDescGZIP(), []int{0, 0}
}

func (x *PTY_Size) GetCols() uint32 {
	if x != nil {
		return x.Cols
	}
	return 0
}

func (x *PTY_Size) GetRows() uint32 {
	if x != nil {
		return x.Rows
	}
	return 0
}

type ProcessEvent_StartEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid uint32 `protobuf:"varint,5,opt,name=pid,proto3" json:"pid,omitempty"`
}

func (x *ProcessEvent_StartEvent) Reset() {
	*x = ProcessEvent_StartEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_envd_process_v1_process_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessEvent_StartEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessEvent_StartEvent) ProtoMessage() {}

func (x *ProcessEvent_StartEvent) ProtoReflect() protoreflect.Message {
	mi := &file_envd_process_v1_process_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessEvent_StartEvent.ProtoReflect.Descriptor instead.
func (*ProcessEvent_StartEvent) Descriptor() ([]byte, []int) {
	return file_envd_process_v1_process_proto_rawDescGZIP(), []int{7, 0}
}

func (x *ProcessEvent_StartEvent) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

type ProcessEvent_DataEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stdout []byte `protobuf:"bytes,6,opt,name=stdout,proto3,oneof" json:"stdout,omitempty"`
	Stderr []byte `protobuf:"bytes,7,opt,name=stderr,proto3,oneof" json:"stderr,omitempty"`
}

func (x *ProcessEvent_DataEvent) Reset() {
	*x = ProcessEvent_DataEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_envd_process_v1_process_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessEvent_DataEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessEvent_DataEvent) ProtoMessage() {}

func (x *ProcessEvent_DataEvent) ProtoReflect() protoreflect.Message {
	mi := &file_envd_process_v1_process_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessEvent_DataEvent.ProtoReflect.Descriptor instead.
func (*ProcessEvent_DataEvent) Descriptor() ([]byte, []int) {
	return file_envd_process_v1_process_proto_rawDescGZIP(), []int{7, 1}
}

func (x *ProcessEvent_DataEvent) GetStdout() []byte {
	if x != nil {
		return x.Stdout
	}
	return nil
}

func (x *ProcessEvent_DataEvent) GetStderr() []byte {
	if x != nil {
		return x.Stderr
	}
	return nil
}

type ProcessEvent_EndEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExitCode int32   `protobuf:"zigzag32,8,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	Error    *string `protobuf:"bytes,9,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *ProcessEvent_EndEvent) Reset() {
	*x = ProcessEvent_EndEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_envd_process_v1_process_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessEvent_EndEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessEvent_EndEvent) ProtoMessage() {}

func (x *ProcessEvent_EndEvent) ProtoReflect() protoreflect.Message {
	mi := &file_envd_process_v1_process_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessEvent_EndEvent.ProtoReflect.Descriptor instead.
func (*ProcessEvent_EndEvent) Descriptor() ([]byte, []int) {
	return file_envd_process_v1_process_proto_rawDescGZIP(), []int{7, 2}
}

func (x *ProcessEvent_EndEvent) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *ProcessEvent_EndEvent) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

var File_envd_process_v1_process_proto protoreflect.FileDescriptor

var file_envd_process_v1_process_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x65, 0x6e, 0x76, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0f, 0x65, 0x6e, 0x76, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31,
	0x1a, 0x25, 0x65, 0x6e, 0x76, 0x64, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x64, 0x0a, 0x03, 0x50, 0x54, 0x59, 0x12, 0x2d,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65,
	0x6e, 0x76, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x54, 0x59, 0x2e, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x1a, 0x2e, 0x0a,
	0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x77,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0xba, 0x01,
	0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x6d,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x39, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x6e, 0x76, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x45, 0x6e, 0x76, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x65, 0x6e, 0x76,
	0x12, 0x10, 0x0a, 0x03, 0x63, 0x77, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63,
	0x77, 0x64, 0x1a, 0x36, 0x0a, 0x08, 0x45, 0x6e, 0x76, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x16, 0x0a, 0x14, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x55, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x65, 0x6e, 0x76, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0xbc, 0x01, 0x0a, 0x13, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x38, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6e, 0x76, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a, 0x03, 0x70,
	0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x6e, 0x76, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x54, 0x59, 0x48, 0x00,
	0x52, 0x03, 0x70, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x6e, 0x76, 0x64, 0x2e, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x42, 0x06, 0x0a, 0x04, 0x5f, 0x70, 0x74, 0x79, 0x22, 0x87, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3a, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x6e, 0x76, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a,
	0x03, 0x70, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x6e, 0x76,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x54, 0x59,
	0x48, 0x00, 0x52, 0x03, 0x70, 0x74, 0x79, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x70,
	0x74, 0x79, 0x22, 0x17, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa4, 0x03, 0x0a, 0x0c,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x6e,
	0x76, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x3d,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65,
	0x6e, 0x76, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a,
	0x03, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x6e, 0x76,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x1a, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x69, 0x64, 0x1a, 0x5b, 0x0a, 0x09, 0x44, 0x61, 0x74,
	0x61, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0c, 0x48, 0x01, 0x52, 0x06, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x1a, 0x4c, 0x0a, 0x08, 0x45, 0x6e, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x11, 0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x19, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x22, 0x4b, 0x0a, 0x14, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x6e, 0x76, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22,
	0x4f, 0x0a, 0x18, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x6e, 0x76,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x22, 0x8a, 0x01, 0x0a, 0x17, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x07,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x65, 0x6e, 0x76, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x33, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x6e, 0x76, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x1a, 0x0a,
	0x18, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x0a, 0x0c, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x05, 0x73, 0x74, 0x64,
	0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74, 0x64, 0x69,
	0x6e, 0x42, 0x07, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x87, 0x01, 0x0a, 0x18, 0x53,
	0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x6e, 0x76, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x65, 0x6e, 0x76, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x06, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x22, 0x1b, 0x0a, 0x19, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x55, 0x0a, 0x17, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x07,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x65, 0x6e, 0x76, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x22, 0x31, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x03, 0x70,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x03, 0x70, 0x69, 0x64, 0x42,
	0x0a, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2a, 0x48, 0x0a, 0x06, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a,
	0x0e, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x53, 0x49, 0x47, 0x54, 0x45, 0x52, 0x4d, 0x10,
	0x01, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x53, 0x49, 0x47, 0x4b,
	0x49, 0x4c, 0x4c, 0x10, 0x02, 0x32, 0xef, 0x04, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5e, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x25, 0x2e, 0x65, 0x6e, 0x76, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x65, 0x6e, 0x76, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x28, 0x2e, 0x65,
	0x6e, 0x76, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x65, 0x6e, 0x76, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x30, 0x01, 0x12, 0x5d, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x24, 0x2e, 0x65, 0x6e, 0x76, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x65, 0x6e, 0x76, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x30, 0x01, 0x12, 0x5e, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x25, 0x2e, 0x65, 0x6e, 0x76, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x65, 0x6e, 0x76,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x67, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x28, 0x2e, 0x65, 0x6e, 0x76, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x29, 0x2e, 0x65, 0x6e, 0x76, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x11, 0x53,
	0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x12, 0x29, 0x2e, 0x65, 0x6e, 0x76, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x65, 0x6e,
	0x76, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xda, 0x01, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e,
	0x65, 0x6e, 0x76, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x42,
	0x0c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x57, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x32, 0x62, 0x2d,
	0x64, 0x65, 0x76, 0x2f, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x2f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x73, 0x2f, 0x65, 0x6e, 0x76, 0x64, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x2f, 0x65,
	0x6e, 0x76, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x45, 0x50, 0x58, 0xaa, 0x02,
	0x0f, 0x45, 0x6e, 0x76, 0x64, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x31,
	0xca, 0x02, 0x0f, 0x45, 0x6e, 0x76, 0x64, 0x5c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5c,
	0x56, 0x31, 0xe2, 0x02, 0x1b, 0x45, 0x6e, 0x76, 0x64, 0x5c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x11, 0x45, 0x6e, 0x76, 0x64, 0x3a, 0x3a, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_envd_process_v1_process_proto_rawDescOnce sync.Once
	file_envd_process_v1_process_proto_rawDescData = file_envd_process_v1_process_proto_rawDesc
)

func file_envd_process_v1_process_proto_rawDescGZIP() []byte {
	file_envd_process_v1_process_proto_rawDescOnce.Do(func() {
		file_envd_process_v1_process_proto_rawDescData = protoimpl.X.CompressGZIP(file_envd_process_v1_process_proto_rawDescData)
	})
	return file_envd_process_v1_process_proto_rawDescData
}

var file_envd_process_v1_process_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_envd_process_v1_process_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_envd_process_v1_process_proto_goTypes = []interface{}{
	(Signal)(0),                       // 0: envd.process.v1.Signal
	(*PTY)(nil),                       // 1: envd.process.v1.PTY
	(*ProcessConfig)(nil),             // 2: envd.process.v1.ProcessConfig
	(*ListProcessesRequest)(nil),      // 3: envd.process.v1.ListProcessesRequest
	(*ListProcessesResponse)(nil),     // 4: envd.process.v1.ListProcessesResponse
	(*StartProcessRequest)(nil),       // 5: envd.process.v1.StartProcessRequest
	(*UpdateProcessRequest)(nil),      // 6: envd.process.v1.UpdateProcessRequest
	(*UpdateProcessResponse)(nil),     // 7: envd.process.v1.UpdateProcessResponse
	(*ProcessEvent)(nil),              // 8: envd.process.v1.ProcessEvent
	(*StartProcessResponse)(nil),      // 9: envd.process.v1.StartProcessResponse
	(*ReconnectProcessResponse)(nil),  // 10: envd.process.v1.ReconnectProcessResponse
	(*SendProcessInputRequest)(nil),   // 11: envd.process.v1.SendProcessInputRequest
	(*SendProcessInputResponse)(nil),  // 12: envd.process.v1.SendProcessInputResponse
	(*ProcessInput)(nil),              // 13: envd.process.v1.ProcessInput
	(*SendProcessSignalRequest)(nil),  // 14: envd.process.v1.SendProcessSignalRequest
	(*SendProcessSignalResponse)(nil), // 15: envd.process.v1.SendProcessSignalResponse
	(*ReconnectProcessRequest)(nil),   // 16: envd.process.v1.ReconnectProcessRequest
	(*ProcessSelector)(nil),           // 17: envd.process.v1.ProcessSelector
	(*PTY_Size)(nil),                  // 18: envd.process.v1.PTY.Size
	nil,                               // 19: envd.process.v1.ProcessConfig.EnvEntry
	(*ProcessEvent_StartEvent)(nil),   // 20: envd.process.v1.ProcessEvent.StartEvent
	(*ProcessEvent_DataEvent)(nil),    // 21: envd.process.v1.ProcessEvent.DataEvent
	(*ProcessEvent_EndEvent)(nil),     // 22: envd.process.v1.ProcessEvent.EndEvent
	(*v1.Credentials)(nil),            // 23: envd.permissions.v1.Credentials
}
var file_envd_process_v1_process_proto_depIdxs = []int32{
	18, // 0: envd.process.v1.PTY.size:type_name -> envd.process.v1.PTY.Size
	19, // 1: envd.process.v1.ProcessConfig.env:type_name -> envd.process.v1.ProcessConfig.EnvEntry
	2,  // 2: envd.process.v1.ListProcessesResponse.processes:type_name -> envd.process.v1.ProcessConfig
	2,  // 3: envd.process.v1.StartProcessRequest.process:type_name -> envd.process.v1.ProcessConfig
	1,  // 4: envd.process.v1.StartProcessRequest.pty:type_name -> envd.process.v1.PTY
	23, // 5: envd.process.v1.StartProcessRequest.owner:type_name -> envd.permissions.v1.Credentials
	17, // 6: envd.process.v1.UpdateProcessRequest.process:type_name -> envd.process.v1.ProcessSelector
	1,  // 7: envd.process.v1.UpdateProcessRequest.pty:type_name -> envd.process.v1.PTY
	20, // 8: envd.process.v1.ProcessEvent.start:type_name -> envd.process.v1.ProcessEvent.StartEvent
	21, // 9: envd.process.v1.ProcessEvent.data:type_name -> envd.process.v1.ProcessEvent.DataEvent
	22, // 10: envd.process.v1.ProcessEvent.end:type_name -> envd.process.v1.ProcessEvent.EndEvent
	8,  // 11: envd.process.v1.StartProcessResponse.event:type_name -> envd.process.v1.ProcessEvent
	8,  // 12: envd.process.v1.ReconnectProcessResponse.event:type_name -> envd.process.v1.ProcessEvent
	17, // 13: envd.process.v1.SendProcessInputRequest.process:type_name -> envd.process.v1.ProcessSelector
	13, // 14: envd.process.v1.SendProcessInputRequest.input:type_name -> envd.process.v1.ProcessInput
	17, // 15: envd.process.v1.SendProcessSignalRequest.process:type_name -> envd.process.v1.ProcessSelector
	0,  // 16: envd.process.v1.SendProcessSignalRequest.signal:type_name -> envd.process.v1.Signal
	17, // 17: envd.process.v1.ReconnectProcessRequest.process:type_name -> envd.process.v1.ProcessSelector
	3,  // 18: envd.process.v1.ProcessService.ListProcesses:input_type -> envd.process.v1.ListProcessesRequest
	16, // 19: envd.process.v1.ProcessService.ReconnectProcess:input_type -> envd.process.v1.ReconnectProcessRequest
	5,  // 20: envd.process.v1.ProcessService.StartProcess:input_type -> envd.process.v1.StartProcessRequest
	6,  // 21: envd.process.v1.ProcessService.UpdateProcess:input_type -> envd.process.v1.UpdateProcessRequest
	11, // 22: envd.process.v1.ProcessService.SendProcessInput:input_type -> envd.process.v1.SendProcessInputRequest
	14, // 23: envd.process.v1.ProcessService.SendProcessSignal:input_type -> envd.process.v1.SendProcessSignalRequest
	4,  // 24: envd.process.v1.ProcessService.ListProcesses:output_type -> envd.process.v1.ListProcessesResponse
	10, // 25: envd.process.v1.ProcessService.ReconnectProcess:output_type -> envd.process.v1.ReconnectProcessResponse
	9,  // 26: envd.process.v1.ProcessService.StartProcess:output_type -> envd.process.v1.StartProcessResponse
	7,  // 27: envd.process.v1.ProcessService.UpdateProcess:output_type -> envd.process.v1.UpdateProcessResponse
	12, // 28: envd.process.v1.ProcessService.SendProcessInput:output_type -> envd.process.v1.SendProcessInputResponse
	15, // 29: envd.process.v1.ProcessService.SendProcessSignal:output_type -> envd.process.v1.SendProcessSignalResponse
	24, // [24:30] is the sub-list for method output_type
	18, // [18:24] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_envd_process_v1_process_proto_init() }
func file_envd_process_v1_process_proto_init() {
	if File_envd_process_v1_process_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_envd_process_v1_process_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PTY); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_envd_process_v1_process_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_envd_process_v1_process_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProcessesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_envd_process_v1_process_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProcessesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_envd_process_v1_process_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartProcessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_envd_process_v1_process_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProcessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_envd_process_v1_process_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProcessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_envd_process_v1_process_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_envd_process_v1_process_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartProcessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_envd_process_v1_process_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReconnectProcessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_envd_process_v1_process_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendProcessInputRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_envd_process_v1_process_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendProcessInputResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_envd_process_v1_process_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_envd_process_v1_process_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendProcessSignalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_envd_process_v1_process_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendProcessSignalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_envd_process_v1_process_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReconnectProcessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_envd_process_v1_process_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessSelector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_envd_process_v1_process_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PTY_Size); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_envd_process_v1_process_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessEvent_StartEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_envd_process_v1_process_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessEvent_DataEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_envd_process_v1_process_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessEvent_EndEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_envd_process_v1_process_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_envd_process_v1_process_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_envd_process_v1_process_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*ProcessEvent_Start)(nil),
		(*ProcessEvent_Data)(nil),
		(*ProcessEvent_End)(nil),
	}
	file_envd_process_v1_process_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*ProcessInput_Stdin)(nil),
	}
	file_envd_process_v1_process_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*ProcessSelector_Pid)(nil),
	}
	file_envd_process_v1_process_proto_msgTypes[20].OneofWrappers = []interface{}{}
	file_envd_process_v1_process_proto_msgTypes[21].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_envd_process_v1_process_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_envd_process_v1_process_proto_goTypes,
		DependencyIndexes: file_envd_process_v1_process_proto_depIdxs,
		EnumInfos:         file_envd_process_v1_process_proto_enumTypes,
		MessageInfos:      file_envd_process_v1_process_proto_msgTypes,
	}.Build()
	File_envd_process_v1_process_proto = out.File
	file_envd_process_v1_process_proto_rawDesc = nil
	file_envd_process_v1_process_proto_goTypes = nil
	file_envd_process_v1_process_proto_depIdxs = nil
}
