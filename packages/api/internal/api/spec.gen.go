// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xa227bPBJ+FYK7l07kptm98F3SP9s1WrRBEmAXCIyClkYWG4pUyZETI9C7/yApWUef",
	"0rhogVw1Nocz5By++TjuMw1VmikJEg2dPNOMaZYCgnaf5jkX0fQv+yeXdEIzhgkdUclSoJP16ohq+JFz",
	"DRGdoM5hRE2YQMrsNlxlVtSg5nJBi2JEQS43avRrh+nj0iCTIWxU2hA4RHNhhU2mpAHni/Px2P4TKokg",
	"0f7JskzwkCFXMvhulLTf1fr+qSGmE/qPoHZw4FdNcKW10t5GBCbUPLNK6IResojYI4JBWozo+fjd8W1e",
	"5JiAxFIrAS9njZ8f3/gXhSRWuYysxX/9Chffgl6Crq5ZVCngYnwll1wrmZbWM60y0Mh9AjDBWZkLHQf6",
	"BaJiggkQaCgZUY6QmoH8GlVfMK3Zyn5uFFtb/zSy4Yk56MqEYAaJycMQjIlzQdxWEitNFnwJsnOEnuV1",
	"Ce6ys0NPls8FD/uK/pcAJqC7Kgg3xG8hShMlxYowdwU+F0DmKyePwNLa1lwpAUxSX41V6d6vgaKGoPIs",
	"s2LUjOKlXe+H8gBXO9FjOlGoRZlTMcsF0sn9rIcKLrxO8JCEMsgwH8jXW/f98PFA5ql1sLu21Wv9zqKV",
	"XXIVMxsNYPD20MRccpOA9aK7g4uRU9YLTKgi6B/YCRO3NqKx0ilDh+v4/qz2KJcIC3DIlYIxbLFJEd11",
	"g9JQpcUed1r2kIETCw4S98sEL/tayURirVLymPAwsZVlV6tWR0INDGEwb9v9cpe9SpruG/ZWt107x/rw",
	"CzxuduPeDqhsbi+rwcPZQ9zkUnK5eIvngCaDTCNE3xj2Nd3xFMhjArJ9rkdmSLmtWZoRQzhBnv5s2rTO",
	"NHPNGsJcc1zd2qbtI3bhesidegBpqYzDd2Aa9H+q4/gu8w2tCC0bvusuTqw+Y4KYWUdcZPwTrCpljlIm",
	"wCInWpLK/59cXE9PPsGq3s3cLk85uIyVw2iOwq5dnV2Si+spHdElaONdOj59dzq25lQGkmWcTuj70/Hp",
	"2DYzhom7WwBy6f5YwEBQPnODhAnRzCLbImw+O840jeiEfgS8slo6fPbsQLK17jtMiK8xndzv4F+N8ixm",
	"ve40wMvWdEasiAbMtYSof7uaFQ9ZX98wsEI1pdwua4WayeUu10ur+1lhmx+z7dolru9kmTIDofngCpYw",
	"IuGxA1Xt6FwrU4fHEf9LFa06kUlzgTxjGgNbYicRQ+ZBM1SuSVeU5oPd8oSN3XdVbtahVSECnhjUlmnV",
	"BHgD4d1Ad/ckN91TtTX9pcIH0CV7DUupBozMuWR6NaQ3cjtjLmCTVrtGKhduArsPaTRIjzSSUKUpkxFB",
	"ReAJwhwt6pUMNc2EC26MJcndQBI7WNdyRusONalS8+8QYvX8bL5Vi179nr3eY6lZrP3SvKuuSJIG3v9m",
	"lViMPFoGz66nFD6wAnAoRdz3hMmtpemlbHFelV2qOR3ZgH+1SOB7mz1qJ3DnA/21wwVsY/WnjxoPPbH6",
	"U/DvBnzC7HBxhX4/7+A36HyDzjfofB3oDNyJTfBcvuGLjQz0I2ALtvxVHfvdQENdpbuBhrmshzcvKfvR",
	"TsFqBGFFOw8jGcFTVYguKlwuytMLtSCYMCQmUbmIyBxqOvrIMRka8lmdP3JwFVe+EIRamK9xbABpEyfW",
	"Y55xf3Ix0CrGx0hUPxXbm4N373tg9pZz5F2y579FpgfVOG64rV1EEWF1nmzvZ60s/+ynd8fO9K29cHvy",
	"dDpYxm8h1ENFf3E9JcavbZln7jun7CB9bbeaFr4I4N8NNKdmcrMoAh/Co2VzMZh9CTDh5wqDgPpft0zC",
	"BMKHIQj16xve8l0K5vLAz2jWdz/svs7XQTWc2VIY1XtX1rMhN87qY2W/YKZr9S9P3m3I1xw87p88r2K6",
	"bbdPDVqDtHLIN8D3x/uEa/wLaUVjQNbG2TpVZu3UCZ7rEV8RaIg1mGRbRt14kfa8EZ4QpOXthKMhyFOw",
	"LFPwJWzPrOna9s3a8qFg3BhRvh7MRrk/8gAXL1fcz3p+KtxyRc1OHiBDwqwTLM82ECoZ2eul7ImneUon",
	"7/89Ho9oyqX/OMQ8BkC22Ofd2mEM3rdRe9R8TIR9YVqquQG9ZHMuOK7a+LZ90qr97weENzCrB9Jfm9rb",
	"6HYkctf9WeOg+Wr/Tn8Y6LSiaSPstuplVdi5FuV030yCgGX8FM7mpxEsaUPLc/f/ixhHvOr/mWJoMSv+",
	"DgAA///yx0rIMCMAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
