// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"//82oxKqlRsAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
