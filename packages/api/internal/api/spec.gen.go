// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.15.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/7xXTW/jNhD9K8S0R8VysulFN2eTtsZegmwOBQKjoKWRxUYiWXLkrGvovxckJUuytfFm",
	"kd1TYnE4H2/evJH2kKpKK4mSLCR70NzwCgmN/yWkJS5TXN6GX5CA5lRABJJXCMnQIAKD/9bCYAYJmRoj",
	"sGmBFXc3aaedtSUj5AaapnHGVitp0ce5ns/dn1RJQknuX651KVJOQsn4H6uke9b7+9VgDgn8EvfJx+HU",
	"xnfGKBNiZGhTI7RzAgnc8Iy5FNESNBFczy9/fMxFTQVKar0yDHYR/PYzCv6MZoumC9p0DfGI38mtMEpW",
	"bXRtlEZDIrQD5TZ0/Lhvwx4/tWarJhp6e1Q3tSizU6dr9/ijK/iLDznO9Valz2iYN2JpaxVBrkzFCRJY",
	"C8nNDqLjlCLI/M1clPg1r+6MdVBPeDiUO768vGUqZ1Qgw768iClZ7pg2aFESEycGzBaqLjO2RmbQlTMR",
	"8gjHETKjgjy2vn0ncKYqmyjYGzN/NgBPSPpw1achJOEGPQ8rtJZvvubobOZtoM6LS3fZKsJExqVASZNI",
	"Z25GcoGmQzzYvqVZJy6GPcmNqthLIdKCCetPO+FiqUFOmE2FGqvfuXid9VnQQgXRWDsP4Kz8oGJaG0G7",
	"z25gA3qLNEVrH9UzSicqfqKQGzS/d13m3uJvcibQDrtLI5j1aRVE2pW30OIT7jpnXtwL5Jk3beX9r4vF",
	"/fLiEw4Gj/tbQW6EzJWXCUFu+uDu6oYt7pcQwRaNDUDNZ5ezuQunNEquBSTwYTafzSHyq8TXFqPchu2j",
	"7IQ2fPQtYpxJfBm2FbxT4zVzmUEC98rSnXMVAEdLNyrbHQltVZckNDcUu/m4yDjxoHmpyly7JqSqvf3Y",
	"IdAr9eY/oQfSelaqT3WyGdPDbc7j7Xj1nstiAN/Uyqg9ifK6LHfMINVGYsZ4WQ5xt4P1ORXrkHzsjPpt",
	"97qtMxpyH5KnCdY/rZpVBMQ3th0lGyYmLpCXgckbnODQn/6YpQWmzye8+QMpnMM08mNXD4Fa7IVbZg94",
	"vQ0TD33cKcA3cF/2iuXF7EjhJkdheXD/2jy8I5fO0fjq3UIftswEhx8LbN8jCtch4sbpu2/P/FvaM/+J",
	"9B5I8JjZPTVWY6rE+35vNLHB3KAtXmPQQzAZbz38Qiid3DFBlpGokJFipdji60xaHmI/HCJHo4+Gp2kg",
	"epN4sPdcxUccuT6t4EiUQtxsvHTf2LLrEOfHvn+Hl7E2YY91B/8Fk4pYrmqZfTcp/DX3gh9Ar00JCezD",
	"oybeXrotzI3g6zJAG04CujmvS2pfBWwSx1yLGV6tZxluXSF9yP3xh57T/sNDL7/Nqvk/AAD//1iK6/hF",
	"DgAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
