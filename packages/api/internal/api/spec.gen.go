// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
