// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"hywAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
