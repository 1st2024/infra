// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.2 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"AAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
