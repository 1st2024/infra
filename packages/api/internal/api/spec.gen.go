// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
